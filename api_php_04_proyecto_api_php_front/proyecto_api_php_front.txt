|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|----------------------------------------------------------------------------------- PROYECTO 02 -----------------------------------------------------------------------------------|
|------------------------------------------------------------------------------- API - PHP - FRONTEND ------------------------------------------------------------------------------|
|-- Autor: Albeiro Ramos. Instructor SENA ------------------------------------------------------------------------------------------------------------------------------------------|
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01. Estructura del Proyecto: ---------------------------------------------------------------------------------------------------------------------------------------------------|
|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

            mi-proyecto/                            #   Carpeta raíz del proyecto
            ├── api/                                #   Contiene la lógica del backend (API REST).
            │   ├── config/                         
            │   │   └── conexion.php                #   Configuración de la conexión a la base de datos.
            │   ├── models/                         
            │   │   └── Location.php                #   Modelo de Datos del 'Location'
            │   ├── controllers/                                
            │   │   └── LocationController.php       #   Controlador del modelo 'Location' que maneja las solicitudes y respuestas de la API
            │   ├── routes/                         
            │   │   └── api.php                     #   Definición de las rutas de la API
            │   └── index.php                       #   Entrada de la API
            ├── frontend/                           #   Contiene el código del frontend
            │   ├── assets/                         #   Recursos estáticos
            │   │   ├── css/
            │   │   │   └── estilos.css             #   Estilos CSS
            │   │   ├── js/
            │   │   │   └── app.js                  #   Scripts JS
            │   │   └── images/                     
            │   │       └── logo.png                #   Imagen que representa un logo
            │   ├── views/                                      
            │   │   └── location.php                #   Vista HTML de los 'location'
            │   └── index.php                       #   Entrada principal del frontend
            ├── config/                                
            │   └── app.php                         #   Configuración general de la apliación
            ├── public/
            │   └── index.php                       #   Entrada principal de la aplicación (Redirige a 'frontend/index.php' o 'api/index.php')
            ├── vendor/                             #   Dependencias composer
            │   └── ... (dependencias de Composer)
            ├── composer.json                       #   Archivo de configuración de composer
            └── composer.lock                       #   Archivo de configuración de composer

|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02. Instalación de composer en el proyecto: ---------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|




|--------------------------------------------------------------------------------------------------------------------------------------------------------|
|-- 03. api/: -------------------------------------------------------------------------------------------------------------------------------------------|
|--------------------------------------------------------------------------------------------------------------------------------------------------------|

--- 03.01. config/conexion.php                      :   Este archivo contiene la configuración de la conexión a la base de datos. Se establecen las 
                                                        credenciales de la base de datos y se crea una instancia de PDO para la conexión.             
             
             1.  <?php
             2.      $servername = "localhost";
             3.      $username = "usuario";
             4.      $password = "contraseña";
             5.      $dbname = "basededatos";
             6.  
             7.      try {
             8.          $conn = new PDO("mysql:host=$servername;dbname=$dbname", $username, $password);
             9.          $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            10.          return $conn;
            11.      } catch(PDOException $e) {
            12.          echo "Error de conexión: " . $e->getMessage();
            13.      }
            14.  ?>

--- 03.02. models/Location.php                      :   Define la clase 'Location' con métodos para interactuar con la tabla "location" de la base de datos.
             
             1.  <?php
             2.  class Location {
             3.      private $conn;
             4.
             5.      public function __construct($db) {
             6.          $this->conn = $db;
             7.      }
             8.  
             9.      public function obtenerTodos() {
            10.          $stmt = $this->conn->query("SELECT * FROM locations");
            11.          return $stmt->fetchAll(PDO::FETCH_ASSOC);
            12.      }
            13.  
            14.      public function obtenerPorId($id) {
            15.          $stmt = $this->conn->prepare("SELECT * FROM locations WHERE id = ?");
            16.          $stmt->execute([$id]);
            17.          return $stmt->fetch(PDO::FETCH_ASSOC);
            18.      }
            19.  
            20.      public function crear($name, $city, $state, $photo, $availableUnits, $wifi, $laundry) {
            21.          $stmt = $this->conn->prepare("INSERT INTO locations (name, city, state, photo, availableUnits, wifi, laundry) VALUES (?, ?, ?, ?, ?, ?, ?)");
            22.          return $stmt->execute([$name, $city, $state, $photo, $availableUnits, $wifi, $laundry]);
            23.      }
            24.  
            25.      public function actualizar($id, $name, $city, $state, $photo, $availableUnits, $wifi, $laundry) {
            26.          $stmt = $this->conn->prepare("UPDATE locations SET name = ?, city = ?, state = ?, photo = ?, availableUnits = ?, wifi = ?, laundry = ? WHERE id = ?");
            27.          return $stmt->execute([$name, $city, $state, $photo, $availableUnits, $wifi, $laundry, $id]);
            28.      }
            29.  
            30.      public function eliminar($id) {
            31.          $stmt = $this->conn->prepare("DELETE FROM locations WHERE id = ?");
            32.          return $stmt->execute([$id]);
            33.      }
            34.  }
            35.  ?>

--- 03.04. controllers/LocationController.php      :   Define la clase 'Location' con métodos para interactuar con la tabla "location" de la base de datos.